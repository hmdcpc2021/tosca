# Inputs removed

tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - https://raw.githubusercontent.com/micado-scale/tosca/v0.9.0/micado_types.yaml

repositories:
  docker_hub: https://hub.docker.com/

description: ADT for Sleep Healthcare & SSE Scheme Deployment on Azure

dsl_definitions:
  compute_cloud: &compute_cloud
    type: tosca.nodes.MiCADO.Azure.Compute
    properties:
      resource_group: <RESOURCE_GROUP_NAME> (e.g. test-rg)
      virtual_network: <VIRTUAL_NETWORK_NAME> (e.g. test-rg-vnet)
      subnet: <SUBNET_NAME> (e.g. default)
      network_security_group: (e.g. micado-worker-nsg)
      image_sku: <UBUNTU_VERSION> (e.g. 18.04-LTS)
      public_key: <PUBLIC_SSH_KEY> (e.g. ssh-rsa AAAB3N...)
      size: <VM_SIZE> (e.g. Standard_B1ms)
    interfaces:
      Terraform:
        create: {}

topology_template:
  node_templates:

    # Describe the Sleep Healthcare application containers
    xnat:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: somnonetz/snet-xnat
        env:
        - name: XNAT_ROOT
          value:
        - name: XNAT_HOME
          value:
        - name: XNAT_DATASOURCE_DRIVER
          value:
        - name: XNAT_DATASOURCE_URL
          value:
        - name: XNAT_DATASOURCE_USERNAME
          value:
        - name: XNAT_DATASOURCE_PASSWORD
          value:
        - name: XNAT_HIBERNATE_DIALECT
          value:
        - name: TOMCAT_XNAT_FOLDER
          value:
        - name: CATALINA_OPTS
          value: -Xms128m -Xmx2048m -Dxnat.home= -agentlib:jdwp=transport=dt_socket=dt_socket,server=y,suspend=n,address=8000
        - name: PGPASSWORD
          value:
        ports:
        - containerPort: 8080
      requirements:
      - host: sleep-app-server
      - volume:
          node: xnat-logs-vol
          relationship:
            type: tosca.relationships.AttachesTo
            properties:
              location: /data/xnat/home/logs
      - volume: xnat-archive-vol
      - volume: xnat-build-vol
      - volume: docker-socket-vol

    xnat-db:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: postgres:9.4-alpine
        env:
          - name: POSTGRES_USER
            value:
          - name: POSTGRES_PASSWORD
            value:
          - name: POSTGRES_DB
            value:
        ports:
        - containerPort: 5432
      requirements:
      - host: sleep-app-server
      - volume: 
          node: postgres-vol
          relationship:
            type: tosca.relationships.AttachesTo
            properties:
              location: /var/lib/postgresql/data

    nginx:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: somnonetz/snet-nginx
        args: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        env:
          - name: XNAT_API_URL
            value:
          - name: SSE_SERVER_BASE_URL
            value:
          - name: TA_BASE_URL
            value:
          - name: SALT_VALUE
            value:
          - name: IV_VALUE
            value:
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
      requirements:
      - host: sleep-app-server
      - volume: letsencrypt-vol
      - volume: certbot-vol
      - volume: 
          node: nginx-conf-vol
          relationship:
            type: tosca.relationships.AttachesTo
            properties:
              location: /etc/nginx/conf.d

    certbot:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: certbot/certbot
        command: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
      requirements:
      - host: sleep-app-server
      - volume: letsencrypt-vol
      - volume: certbot-vol
      - host: cq-server

    # Describe volumes
    xnat-logs-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /data/xnat/logs
    xnat-archive-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /data/xnat/archive
    xnat-build-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /data/xnat/build
    docker-socket-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /var/run/docker.sock
    postgres-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /data/xnat-db
    letsencrypt-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /etc/letsencrypt
    certbot-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /var/www/certbot
    nginx-conf-vol:
      type: tosca.nodes.MiCADO.Container.Volume.HostPath
      properties:
        path: /data/nginx/conf.d

    # Describe the SSE containers
    sse:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: uowcpc/asclepios-server:dev
        ports:
        - target: 8080
          nodePort: 30808
        env:
        - name: DJANGO_LOGLEVEL
          value: DEBUG
        - name: TA_SERVER
          value: "http://ta:8000"
        - name: DB_NAME
          value: sse-db
        - name: DB_USER
          value: sse
        - name: DB_PASSWORD
          value: sse
        - name: DB_HOST
          value: sse-db
        - name: DB_PORT
          value: "5432"
        - name: ALLOWED_HOSTS
          value: "*"
        - name: DJANGO_DEBUG
          value: "true"
      requirements:
      - host: sse-server

    sse-db:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: postgres
        ports:
        - target: 5432
        env:
        - name: POSTGRES_USER 
          value: sse
        - name: POSTGRES_PASSWORD 
          value: sse
        - name: POSTGRES_DB
          value: sse-db
        - name: PGDATA
          value: /var/lib/postgresql/data
      requirements:
      - host: sse-server

    # Describe the TA containers
    ta:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: uowcpc/asclepios-ta:dev
        ports:
        - target: 8000
        env:
        - name: DJANGO_LOGLEVEL
          value: DEBUG
        - name: DB_NAME
          value: ta-db
        - name: DB_USER
          value: ta
        - name: DB_PASSWORD
          value: ta
        - name: DB_HOST
          value: ta-db 
        - name: DB_PORT
          value: "5432"
        - name: ALLOWED_HOSTS
          value: "*"
        - name: HASH_LENGTH
          value: "256"
        - name: KEY_G
          value: "123"
        - name: SALT
          value: abc123!?
        - name: IV
          value: abcdefg
        - name: DJANGO_DEBUG
          value: "true"
      requirements:
      - host: ta-server

    ta-db:
      type: tosca.nodes.MiCADO.Container.Application.Docker.Deployment
      properties:
        image: postgres
        ports:
        - target: 5432
        env:
        - name: POSTGRES_USER 
          value: ta
        - name: POSTGRES_PASSWORD 
          value: ta
        - name: POSTGRES_DB
          value: ta-db
        - name: PGDATA
          value: /var/lib/postgresql/data
      requirements:
      - host: ta-server

    # Describe server VMs
    sleep-app-server: *compute_cloud
    sse-server: *compute_cloud
    ta-server: *compute_cloud
      
  policies:
  - monitoring:
      type: tosca.policies.Monitoring.MiCADO
      properties:
        enable_container_metrics: true
        enable_node_metrics: true